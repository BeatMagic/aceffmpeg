@PACKAGE_INIT@

# FFmpeg预编译库配置文件
# 版本: @PROJECT_VERSION@

set(FFMPEG_VERSION "@PROJECT_VERSION@")

# 查找包含目录
find_path(FFMPEG_INCLUDE_DIR
    NAMES libavcodec/avcodec.h
    PATHS "@PACKAGE_CMAKE_INSTALL_PREFIX@/include"
          "${CMAKE_CURRENT_LIST_DIR}/../../../ffmpeg/include"
    NO_DEFAULT_PATH
)

# 检测平台和架构
if(WIN32)
    set(FFMPEG_LIB_DIR "@PACKAGE_CMAKE_INSTALL_PREFIX@/lib")
    if(NOT EXISTS "${FFMPEG_LIB_DIR}")
        set(FFMPEG_LIB_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../ffmpeg/lib/win")
    endif()
    set(LIB_SUFFIX ".lib")
    set(DLL_SUFFIX ".dll")
elseif(APPLE)
    # 检测macOS架构
    if(CMAKE_OSX_ARCHITECTURES MATCHES "arm64" OR CMAKE_SYSTEM_PROCESSOR MATCHES "arm64")
        set(FFMPEG_LIB_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../ffmpeg/lib/macos/arm64")
    else()
        set(FFMPEG_LIB_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../ffmpeg/lib/macos/x86_64")
    endif()
    set(LIB_SUFFIX ".dylib")
elseif(UNIX)
    set(FFMPEG_LIB_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../ffmpeg/lib/macos/x86_64")
    set(LIB_SUFFIX ".dylib")
endif()

# FFmpeg库列表
set(FFMPEG_LIBRARIES
    avcodec
    avdevice
    avfilter
    avformat
    avutil
    postproc
    swresample
    swscale
)

# 检查所有库是否存在
set(FFMPEG_FOUND TRUE)
foreach(lib ${FFMPEG_LIBRARIES})
    if(WIN32)
        # Windows平台检查
        if(NOT EXISTS "${FFMPEG_LIB_DIR}/${lib}.lib")
            set(FFMPEG_FOUND FALSE)
            set(FFMPEG_NOT_FOUND_MESSAGE "Could not find ${lib}.lib in ${FFMPEG_LIB_DIR}")
            break()
        endif()
    else()
        # macOS/Linux平台检查
        if(NOT EXISTS "${FFMPEG_LIB_DIR}/lib${lib}${LIB_SUFFIX}")
            set(FFMPEG_FOUND FALSE)
            set(FFMPEG_NOT_FOUND_MESSAGE "Could not find lib${lib}${LIB_SUFFIX} in ${FFMPEG_LIB_DIR}")
            break()
        endif()
    endif()
endforeach()

if(NOT EXISTS "${FFMPEG_INCLUDE_DIR}")
    set(FFMPEG_FOUND FALSE)
    set(FFMPEG_NOT_FOUND_MESSAGE "Could not find FFmpeg include directory")
endif()

# 创建导入目标（如果尚未创建）
if(FFMPEG_FOUND AND NOT TARGET FFmpeg::avcodec)
    foreach(lib ${FFMPEG_LIBRARIES})
        add_library(FFmpeg::${lib} SHARED IMPORTED)
        
        # 设置头文件目录
        set_target_properties(FFmpeg::${lib} PROPERTIES
            INTERFACE_INCLUDE_DIRECTORIES "${FFMPEG_INCLUDE_DIR}"
        )
        
        if(WIN32)
            # Windows平台设置
            set_target_properties(FFmpeg::${lib} PROPERTIES
                IMPORTED_IMPLIB "${FFMPEG_LIB_DIR}/${lib}${LIB_SUFFIX}"
            )
            # 查找实际的DLL文件
            file(GLOB DLL_FILE "${FFMPEG_LIB_DIR}/${lib}-*.dll")
            if(DLL_FILE)
                set_target_properties(FFmpeg::${lib} PROPERTIES
                    IMPORTED_LOCATION "${DLL_FILE}"
                )
            endif()
        else()
            # macOS/Linux平台设置
            set_target_properties(FFmpeg::${lib} PROPERTIES
                IMPORTED_LOCATION "${FFMPEG_LIB_DIR}/lib${lib}${LIB_SUFFIX}"
            )
        endif()
    endforeach()
    
    # 创建FFmpeg总目标
    if(NOT TARGET FFmpeg::FFmpeg)
        add_library(FFmpeg::FFmpeg INTERFACE IMPORTED)
        set_target_properties(FFmpeg::FFmpeg PROPERTIES
            INTERFACE_INCLUDE_DIRECTORIES "${FFMPEG_INCLUDE_DIR}"
            INTERFACE_LINK_LIBRARIES "FFmpeg::avcodec;FFmpeg::avdevice;FFmpeg::avfilter;FFmpeg::avformat;FFmpeg::avutil;FFmpeg::postproc;FFmpeg::swresample;FFmpeg::swscale"
        )
    endif()
endif()

# 设置变量供旧式CMake使用
if(FFMPEG_FOUND)
    set(FFMPEG_INCLUDE_DIRS ${FFMPEG_INCLUDE_DIR})
    set(FFMPEG_LIBRARY_DIRS ${FFMPEG_LIB_DIR})
    
    # 构建库文件列表
    set(FFMPEG_LIBRARY_FILES)
    foreach(lib ${FFMPEG_LIBRARIES})
        if(WIN32)
            list(APPEND FFMPEG_LIBRARY_FILES "${FFMPEG_LIB_DIR}/${lib}${LIB_SUFFIX}")
        else()
            list(APPEND FFMPEG_LIBRARY_FILES "${FFMPEG_LIB_DIR}/lib${lib}${LIB_SUFFIX}")
        endif()
    endforeach()
    set(FFMPEG_LIBS ${FFMPEG_LIBRARY_FILES})
endif()

check_required_components(FFmpeg)